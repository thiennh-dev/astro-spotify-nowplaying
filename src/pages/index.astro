---
---

<html lang="en">
<head>
  <meta charset="utf-8" />
  <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <meta name="generator" content={Astro.generator} />
  <title>Now Playing on Spotify</title>
  <style>
    :root {
      --bg-color: #0d0d0d;
      --card-bg: #1f1f1f;
      --primary-text: #ffffff;
      --secondary-text: #aaaaaa;
      --accent: #1db954;
    }

    * {
      box-sizing: border-box;
    }

    body {
      margin: 0;
      padding: 0;
      background: var(--bg-color);
      color: var(--primary-text);
      font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;
      display: grid;
      place-items: center;
      min-height: 100vh;
    }

    main {
      padding: 1rem;
    }

    .player {
      background: var(--card-bg);
      border-radius: 16px;
      box-shadow: 0 8px 30px rgba(0, 0, 0, 0.6);
      padding: 2rem;
      max-width: 380px;
      width: 100%;
      text-align: center;
      transition: all 0.3s ease-in-out;
    }

    .player img {
      width: 100%;
      max-width: 320px;
      height: auto;
      aspect-ratio: 1 / 1;
      object-fit: cover;
      border-radius: 12px;
      margin-bottom: 1.5rem;
      border: 2px solid var(--accent);
    }

    .player h2 {
      font-size: 1.75rem;
      font-weight: 600;
      margin: 0.5rem 0 0.25rem;
      overflow: hidden;
      white-space: nowrap;
      text-overflow: ellipsis;
    }

    .player p {
      margin: 0.3rem 0;
      font-size: 0.95rem;
      color: var(--secondary-text);
    }

    .player p strong {
      color: var(--primary-text);
    }

    .time-fetch {
      font-size: 0.8rem;
      margin-top: 1.25rem;
      color: #666;
    }

    @media (max-width: 420px) {
      .player {
        padding: 1.5rem;
        border-radius: 12px;
      }

      .player h2 {
        font-size: 1.4rem;
      }
    }
  </style>
</head>
<body>
  <main>
    <div id="spotify-player" class="player">
      <h2>Loading Spotify Data...</h2>
    </div>
  </main>

  <script>
    const playerElement = document.getElementById('spotify-player');
    
    function formatTime(ms: number): string {
      const totalSeconds = Math.floor(ms / 1000);
      const minutes = Math.floor(totalSeconds / 60);
      const seconds = totalSeconds % 60;
      return `${minutes}:${seconds.toString().padStart(2, '0')}`;
    }


    async function fetchNowPlaying() {
      if (!playerElement) {
        console.error('Player element not found');
        return;
      }

      try {
        const response = await fetch('/api/spotify.json');
        if (!response.ok) throw new Error(`Server returned ${response.status}`);

        const data = await response.json();
        const fetchTime = new Date().toLocaleTimeString('en-GB', { timeZone: 'Asia/Ho_Chi_Minh' });

        if (data.isPlaying) {
          playerElement.innerHTML = `
            <img src="${data.albumImageUrl}" alt="Album cover for ${data.title}">
            <h2>${data.title}</h2>
            <p><strong>${data.artist}</strong></p>
            <p>${formatTime(data.timestamp)} / ${formatTime(data.duration)}</p>
            <p class="time-fetch">Last update: ${fetchTime} (GMT+7)</p>
          `;
        } else {
          playerElement.innerHTML = `
            <h2>Not Currently Playing</h2>
            <p>Spotify is silent right now.</p>
            <p class="time-fetch">Last update: ${fetchTime} (GMT+7)</p>
          `;
        }
      } catch (error) {
        console.error('Error fetching Spotify data:', error);
        playerElement.innerHTML = `
          <h2>Oops!</h2>
          <p>Could not fetch data.</p>
          <p class="time-fetch">Try again later.</p>
        `;
      }
    }

    fetchNowPlaying();
    setInterval(fetchNowPlaying, 5000);
  </script>
</body>
</html>
